{"version":3,"sources":["components/TodoTemplate.js","components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","components/TodoPalette.js","App.js","index.js"],"names":["TodoTemplate","children","className","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","placeholder","type","React","memo","todo","onRemove","onToggle","style","id","text","checked","color","cn","onClick","todos","rowRenderer","index","key","width","height","rowCount","length","rowHeight","list","outline","Palette","setColor","colors","map","background","createBulkTodos","array","i","push","todoReducer","action","concat","filter","App","useReducer","undefined","dispatch","nextId","useRef","current","onChangeColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.558879b4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TodoTemplate.scss';\r\n\r\nconst TodoTemplate = ({ children }) => {\r\n  return (\r\n    <div className=\"TodoTemplate\">\r\n      <div className=\"app-title\">일정 관리</div>\r\n      <div className=\"content\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoTemplate;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport './TodoInsert.scss';\r\n\r\nconst TodoInsert = ({ onInsert }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const onChange = useCallback(e => setValue(e.target.value), []);\r\n\r\n  const onSubmit = useCallback(\r\n    e => {\r\n      onInsert(value);\r\n      setValue('');\r\n\r\n      // submit event는 browser에서 새로고침을 발생시키므로 이를 방지하기 위한 함수\r\n      e.preventDefault();\r\n    },\r\n    [onInsert, value],\r\n  );\r\n\r\n  return (\r\n    <form className=\"TodoInsert\" onSubmit={onSubmit}>\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder=\"할 일을 입력하세요\"\r\n      />\r\n      <button type=\"submit\">\r\n        <MdAdd />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoInsert;\r\n","import React from 'react';\r\nimport {\r\n  MdCheckBoxOutlineBlank,\r\n  MdCheckBox,\r\n  MdRemoveCircleOutline,\r\n} from 'react-icons/md';\r\nimport cn from 'classnames';\r\nimport './TodoListItem.scss';\r\n\r\nconst TodoListItem = ({ todo, onRemove, onToggle, style }) => {\r\n  const { id, text, checked, color } = todo;\r\n\r\n  return (\r\n    <div className=\"TodoListItem-virtualized\" style={style}>\r\n      <div className=\"TodoListItem\">\r\n        <div\r\n          className={cn('checkbox', { checked })}\r\n          style={{ color }}\r\n          onClick={() => onToggle(id)}\r\n        >\r\n          {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n          <div className=\"text\" style={{ color }}>\r\n            {text}\r\n          </div>\r\n        </div>\r\n        <div className=\"remove\" onClick={() => onRemove(id)}>\r\n          <MdRemoveCircleOutline />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoListItem);\r\n","import React, { useCallback } from 'react';\r\nimport { List } from 'react-virtualized';\r\nimport TodoListItem from './TodoListItem';\r\nimport './TodoList.scss';\r\n\r\nconst TodoList = ({ todos, onRemove, onToggle }) => {\r\n  const rowRenderer = useCallback(\r\n    ({ index, key, style }) => {\r\n      const todo = todos[index];\r\n      return (\r\n        <TodoListItem\r\n          todo={todo}\r\n          key={key}\r\n          onRemove={onRemove}\r\n          onToggle={onToggle}\r\n          style={style}\r\n        />\r\n      );\r\n    },\r\n    [onRemove, onToggle, todos],\r\n  );\r\n\r\n  return (\r\n    <List\r\n      className=\"TodoList\"\r\n      width={512}\r\n      height={410}\r\n      rowCount={todos.length}\r\n      rowHeight={57}\r\n      rowRenderer={rowRenderer}\r\n      list={todos}\r\n      style={{ outline: 'none' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(TodoList);\r\n","import React from 'react';\r\nimport './TodoPalette.scss';\r\n\r\nconst Palette = ({ setColor, colors, onClick }) => {\r\n  return (\r\n    <div className=\"TodoPalette\">\r\n      {colors.map(color => (\r\n        <div\r\n          key={color}\r\n          className={`color ${setColor === color ? 'checked' : ''}`}\r\n          onClick={() => onClick(color)}\r\n          style={{ background: color }}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Palette;\r\n","import React, { useState, useReducer, useRef, useCallback } from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport Palette from './components/TodoPalette';\n\nfunction createBulkTodos() {\n  const array = [];\n  for (let i = 1; i <= 2500; i++) {\n    array.push({ id: i, text: `할 일 ${i}`, checked: false, color: '#212529' });\n  }\n  return array;\n}\n\nfunction todoReducer(todos, action) {\n  switch (action.type) {\n    case 'INSERT': // 새로 추가, {type: 'INSERT', todo: {id: 1, text: 'todo', checked: false}}\n      return todos.concat(action.todo);\n    case 'REMOVE': // 제거, {type: 'REMOVE', id: 1}\n      return todos.filter(todo => todo.id !== action.id);\n    case 'TOGGLE': // 토글, {type: 'TOGGLE', id: 1}\n      return todos.map(todo =>\n        todo.id === action.id ? { ...todo, checked: !todo.checked } : todo,\n      );\n    default:\n      return todos;\n  }\n}\n\nfunction App() {\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);\n\n  const colors = ['#212529', '#fa5252', '#4c6ef5', '#12b886'];\n  const [color, setColor] = useState('#212529');\n\n  const nextId = useRef(2501);\n\n  const onInsert = useCallback(\n    text => {\n      const todo = { id: nextId.current, text, checked: false, color };\n      dispatch({ type: 'INSERT', todo });\n      nextId.current += 1;\n    },\n    [color],\n  );\n\n  const onRemove = useCallback(id => dispatch({ type: 'REMOVE', id }), []);\n\n  const onToggle = useCallback(id => dispatch({ type: 'TOGGLE', id }), []);\n\n  const onChangeColor = useCallback(color => setColor(color), []);\n\n  return (\n    <TodoTemplate>\n      <Palette setColor={color} colors={colors} onClick={onChangeColor} />\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}